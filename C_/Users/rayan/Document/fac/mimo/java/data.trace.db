2024-08-31 17:10:46.827459+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Le nombre de colonnes ne correspond pas
Column count does not match; SQL statement:
INSERT INTO vino (id, nom, PAYS, type_de_vin_id, appelation_id, domaine_exploitation_id, cepage_id) VALUES (1, 'Margaux', 'France', 1, 1, 1, 1), (2, 'Romanée-Conti', 'France', 2, 2, 2, 2), (3, 'Chardonnay Grand Cru', 'France', 3, 5, 4, 2), (4, 'Pomerol', 'France', 4, 8, 9, 9), (5, 'Sauternes', 'France', 5, 7, 3, 7, 7), (6, 'Riesling Grand Cru', 'France', 6, 6, 6, 6), (7, 'Syrah de Rhône', 'France', 7, 7, 4, 4), (8, 'Grenache du Sud', 'France', 8, 8, 10, 10), (9, 'Pinot Noir', 'France', 9, 9, 5, 8), (10, 'Tempranillo Reserva', 'Espagne', 10, 10, 10, 10) [21002-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:295)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:489)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at edu.mimo.InVinoVeritas.InVinoVeritasApplication.main(InVinoVeritasApplication.java:10)
2024-08-31 17:50:28.287045+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS TypeDeVin ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(100), couleur VARCHAR(100), millesime INT, teneurAlcool DOUBLE, aromes TEXT, dureeGarde INT, temperatureService DOUBLE, description TEXT, domaineOrigine_id INT, regionViticole VARCHAR(100), prixMoyen DOUBLE, volumeProduction DOUBLE, [*])"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS TypeDeVin ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(100), couleur VARCHAR(100), millesime INT, teneurAlcool DOUBLE, aromes TEXT, dureeGarde INT, temperatureService DOUBLE, description TEXT, domaineOrigine_id INT, regionViticole VARCHAR(100), prixMoyen DOUBLE, volumeProduction DOUBLE, [*])"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS TypeDeVin ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(100), couleur VARCHAR(100), millesime INT, teneurAlcool DOUBLE, aromes TEXT, dureeGarde INT, temperatureService DOUBLE, description TEXT, domaineOrigine_id INT, regionViticole VARCHAR(100), prixMoyen DOUBLE, volumeProduction DOUBLE, ) [42001-224]
2024-08-31 17:51:40.317923+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS TypeDeVin ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(100), couleur VARCHAR(100), millesime INT, teneurAlcool DOUBLE, aromes TEXT, dureeGarde INT, temperatureService DOUBLE, description TEXT, regionViticole VARCHAR(100), prixMoyen DOUBLE, volumeProduction DOUBLE, [*])"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS TypeDeVin ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(100), couleur VARCHAR(100), millesime INT, teneurAlcool DOUBLE, aromes TEXT, dureeGarde INT, temperatureService DOUBLE, description TEXT, regionViticole VARCHAR(100), prixMoyen DOUBLE, volumeProduction DOUBLE, [*])"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS TypeDeVin ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(100), couleur VARCHAR(100), millesime INT, teneurAlcool DOUBLE, aromes TEXT, dureeGarde INT, temperatureService DOUBLE, description TEXT, regionViticole VARCHAR(100), prixMoyen DOUBLE, volumeProduction DOUBLE, ) [42001-224]
2024-08-31 17:53:57.340915+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Erreur de syntaxe dans l'instruction SQL "CREATE TABLE IF NOT EXISTS TypeDeVin ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(100), couleur VARCHAR(100), millesime INT, teneurAlcool DOUBLE, aromes TEXT, dureeGarde INT, temperatureService DOUBLE, description TEXT, regionViticole VARCHAR(100), prixMoyen DOUBLE, volumeProduction DOUBLE, [*])"; attendu "identifier"
Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS TypeDeVin ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(100), couleur VARCHAR(100), millesime INT, teneurAlcool DOUBLE, aromes TEXT, dureeGarde INT, temperatureService DOUBLE, description TEXT, regionViticole VARCHAR(100), prixMoyen DOUBLE, volumeProduction DOUBLE, [*])"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS TypeDeVin ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, nom VARCHAR(100), couleur VARCHAR(100), millesime INT, teneurAlcool DOUBLE, aromes TEXT, dureeGarde INT, temperatureService DOUBLE, description TEXT, regionViticole VARCHAR(100), prixMoyen DOUBLE, volumeProduction DOUBLE, ) [42001-224]
2024-08-31 18:27:35.819904+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Colonne "DESCRIPTIONCEPAGE" non trouvée
Column "DESCRIPTIONCEPAGE" not found; SQL statement:
INSERT INTO cepage (id, nom, couleur, caracteristiquesGustatives, regionOrigine, tauxSucre, acidite, potentielGarde, rendement, temperatureOptimale, resistanceMaladies, aromesTypiques, alcoolPotentiel, descriptionCepage) VALUES (1, 'Cabernet Sauvignon', 'Rouge', 'Notes de cassis, cerise, poivre', 'Bordeaux', 5.0, 3.2, 15, 50.0, 15.0, 'Bonne', 'Cassis, cerise, poivre', 14.0, 'Cepage rouge classique de Bordeaux'), (2, 'Chardonnay', 'Blanc', 'Notes de pomme, agrumes, beurre', 'Bourgogne', 6.5, 3.3, 10, 60.0, 12.0, 'Bonne', 'Pomme, agrumes, beurre', 13.5, 'Cepage blanc polyvalent originaire de Bourgogne'), (3, 'Sauvignon Blanc', 'Blanc', 'Notes de pamplemousse, herbe', 'Loire', 5.5, 3.4, 8, 55.0, 14.0, 'Très bonne', 'Pamplemousse, herbe', 12.5, 'Cepage aromatique du Val de Loire'), (4, 'Merlot', 'Rouge', 'Notes de prune, cerise', 'Bordeaux', 6.0, 3.1, 12, 45.0, 16.0, 'Bonne', 'Prune, cerise', 13.8, 'Cepage souple et fruité de Bordeaux'), (5, 'Pinot Noir', 'Rouge', 'Notes de fraise, épices', 'Bourgogne', 5.5, 3.5, 10, 40.0, 13.0, 'Bonne', 'Fraise, épices', 14.0, 'Cepage délicat du Bourgogne'), (6, 'Syrah', 'Rouge', 'Notes de poivre, mûre', 'Rhône', 5.5, 3.3, 15, 50.0, 15.0, 'Très bonne', 'Poivre, mûre', 14.2, 'Cepage puissant du Rhône'), (7, 'Grenache', 'Rouge', 'Notes de fraise, épices', 'Sud', 6.0, 3.0, 12, 55.0, 17.0, 'Bonne', 'Fraise, épices', 13.5, 'Cepage important du Sud de la France'), (8, 'Riesling', 'Blanc', 'Notes d’abricot, miel', 'Alsace', 7.0, 3.6, 20, 50.0, 12.0, 'Excellente', 'Abricot, miel', 12.0, 'Cepage aromatique d’Alsace'), (9, 'Gewurztraminer', 'Blanc', 'Notes de lychee, épices', 'Alsace', 8.0, 3.7, 25, 45.0, 13.0, 'Excellente', 'Lychee, épices', 13.0, 'Cepage exotique d’Alsace'), (10, 'Tempranillo', 'Rouge', 'Notes de cerise, tabac', 'Espagne', 6.0, 3.2, 18, 60.0, 14.0, 'Bonne', 'Cerise, tabac', 14.5, 'Cepage principal en Espagne') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at edu.mimo.InVinoVeritas.InVinoVeritasApplication.main(InVinoVeritasApplication.java:10)
2024-08-31 18:32:55.582697+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Colonne "DESCRIPTIONCEPAGE" non trouvée
Column "DESCRIPTIONCEPAGE" not found; SQL statement:
INSERT INTO cepage (id, nom, couleur, caracteristiquesGustatives, regionOrigine, tauxSucre, acidite, potentielGarde, rendement, temperatureOptimale, resistanceMaladies, aromesTypiques, alcoolPotentiel, descriptionCepage) VALUES (1, 'Cabernet Sauvignon', 'Rouge', 'Notes de cassis, cerise, poivre', 'Bordeaux', 5.0, 3.2, 15, 50.0, 15.0, 'Bonne', 'Cassis, cerise, poivre', 14.0, 'Cepage rouge classique de Bordeaux'), (2, 'Chardonnay', 'Blanc', 'Notes de pomme, agrumes, beurre', 'Bourgogne', 6.5, 3.3, 10, 60.0, 12.0, 'Bonne', 'Pomme, agrumes, beurre', 13.5, 'Cepage blanc polyvalent originaire de Bourgogne'), (3, 'Sauvignon Blanc', 'Blanc', 'Notes de pamplemousse, herbe', 'Loire', 5.5, 3.4, 8, 55.0, 14.0, 'Très bonne', 'Pamplemousse, herbe', 12.5, 'Cepage aromatique du Val de Loire'), (4, 'Merlot', 'Rouge', 'Notes de prune, cerise', 'Bordeaux', 6.0, 3.1, 12, 45.0, 16.0, 'Bonne', 'Prune, cerise', 13.8, 'Cepage souple et fruité de Bordeaux'), (5, 'Pinot Noir', 'Rouge', 'Notes de fraise, épices', 'Bourgogne', 5.5, 3.5, 10, 40.0, 13.0, 'Bonne', 'Fraise, épices', 14.0, 'Cepage délicat du Bourgogne'), (6, 'Syrah', 'Rouge', 'Notes de poivre, mûre', 'Rhône', 5.5, 3.3, 15, 50.0, 15.0, 'Très bonne', 'Poivre, mûre', 14.2, 'Cepage puissant du Rhône'), (7, 'Grenache', 'Rouge', 'Notes de fraise, épices', 'Sud', 6.0, 3.0, 12, 55.0, 17.0, 'Bonne', 'Fraise, épices', 13.5, 'Cepage important du Sud de la France'), (8, 'Riesling', 'Blanc', 'Notes d’abricot, miel', 'Alsace', 7.0, 3.6, 20, 50.0, 12.0, 'Excellente', 'Abricot, miel', 12.0, 'Cepage aromatique d’Alsace'), (9, 'Gewurztraminer', 'Blanc', 'Notes de lychee, épices', 'Alsace', 8.0, 3.7, 25, 45.0, 13.0, 'Excellente', 'Lychee, épices', 13.0, 'Cepage exotique d’Alsace'), (10, 'Tempranillo', 'Rouge', 'Notes de cerise, tabac', 'Espagne', 6.0, 3.2, 18, 60.0, 14.0, 'Bonne', 'Cerise, tabac', 14.5, 'Cepage principal en Espagne') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at edu.mimo.InVinoVeritas.InVinoVeritasApplication.main(InVinoVeritasApplication.java:10)
2024-08-31 18:38:52.336813+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Colonne "DESCRIPTIONCEPAGE" non trouvée
Column "DESCRIPTIONCEPAGE" not found; SQL statement:
INSERT INTO cepage (id, nom, couleur, caracteristiquesGustatives, regionOrigine, tauxSucre, acidite, potentielGarde, rendement, temperatureOptimale, resistanceMaladies, aromesTypiques, alcoolPotentiel, descriptionCepage) VALUES (1, 'Cabernet Sauvignon', 'Rouge', 'Notes de cassis, cerise, poivre', 'Bordeaux', 5.0, 3.2, 15, 50.0, 15.0, 'Bonne', 'Cassis, cerise, poivre', 14.0, 'Cepage rouge classique de Bordeaux'), (2, 'Chardonnay', 'Blanc', 'Notes de pomme, agrumes, beurre', 'Bourgogne', 6.5, 3.3, 10, 60.0, 12.0, 'Bonne', 'Pomme, agrumes, beurre', 13.5, 'Cepage blanc polyvalent originaire de Bourgogne'), (3, 'Sauvignon Blanc', 'Blanc', 'Notes de pamplemousse, herbe', 'Loire', 5.5, 3.4, 8, 55.0, 14.0, 'Très bonne', 'Pamplemousse, herbe', 12.5, 'Cepage aromatique du Val de Loire'), (4, 'Merlot', 'Rouge', 'Notes de prune, cerise', 'Bordeaux', 6.0, 3.1, 12, 45.0, 16.0, 'Bonne', 'Prune, cerise', 13.8, 'Cepage souple et fruité de Bordeaux'), (5, 'Pinot Noir', 'Rouge', 'Notes de fraise, épices', 'Bourgogne', 5.5, 3.5, 10, 40.0, 13.0, 'Bonne', 'Fraise, épices', 14.0, 'Cepage délicat du Bourgogne'), (6, 'Syrah', 'Rouge', 'Notes de poivre, mûre', 'Rhône', 5.5, 3.3, 15, 50.0, 15.0, 'Très bonne', 'Poivre, mûre', 14.2, 'Cepage puissant du Rhône'), (7, 'Grenache', 'Rouge', 'Notes de fraise, épices', 'Sud', 6.0, 3.0, 12, 55.0, 17.0, 'Bonne', 'Fraise, épices', 13.5, 'Cepage important du Sud de la France'), (8, 'Riesling', 'Blanc', 'Notes d’abricot, miel', 'Alsace', 7.0, 3.6, 20, 50.0, 12.0, 'Excellente', 'Abricot, miel', 12.0, 'Cepage aromatique d’Alsace'), (9, 'Gewurztraminer', 'Blanc', 'Notes de lychee, épices', 'Alsace', 8.0, 3.7, 25, 45.0, 13.0, 'Excellente', 'Lychee, épices', 13.0, 'Cepage exotique d’Alsace'), (10, 'Tempranillo', 'Rouge', 'Notes de cerise, tabac', 'Espagne', 6.0, 3.2, 18, 60.0, 14.0, 'Bonne', 'Cerise, tabac', 14.5, 'Cepage principal en Espagne') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at edu.mimo.InVinoVeritas.InVinoVeritasApplication.main(InVinoVeritasApplication.java:10)
2024-08-31 18:42:03.448536+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Colonne "DESCRIPTIF" non trouvée
Column "DESCRIPTIF" not found; SQL statement:
INSERT INTO cepage (id, nom, couleur, caracteristiquesGustatives, regionOrigine, tauxSucre, acidite, potentielGarde, rendement, temperatureOptimale, resistanceMaladies, aromesTypiques, alcoolPotentiel, descriptif) VALUES (1, 'Cabernet Sauvignon', 'Rouge', 'Notes de cassis, cerise, poivre', 'Bordeaux', 5.0, 3.2, 15, 50.0, 15.0, 'Bonne', 'Cassis, cerise, poivre', 14.0, 'Cepage rouge classique de Bordeaux'), (2, 'Chardonnay', 'Blanc', 'Notes de pomme, agrumes, beurre', 'Bourgogne', 6.5, 3.3, 10, 60.0, 12.0, 'Bonne', 'Pomme, agrumes, beurre', 13.5, 'Cepage blanc polyvalent originaire de Bourgogne'), (3, 'Sauvignon Blanc', 'Blanc', 'Notes de pamplemousse, herbe', 'Loire', 5.5, 3.4, 8, 55.0, 14.0, 'Très bonne', 'Pamplemousse, herbe', 12.5, 'Cepage aromatique du Val de Loire'), (4, 'Merlot', 'Rouge', 'Notes de prune, cerise', 'Bordeaux', 6.0, 3.1, 12, 45.0, 16.0, 'Bonne', 'Prune, cerise', 13.8, 'Cepage souple et fruité de Bordeaux'), (5, 'Pinot Noir', 'Rouge', 'Notes de fraise, épices', 'Bourgogne', 5.5, 3.5, 10, 40.0, 13.0, 'Bonne', 'Fraise, épices', 14.0, 'Cepage délicat du Bourgogne'), (6, 'Syrah', 'Rouge', 'Notes de poivre, mûre', 'Rhône', 5.5, 3.3, 15, 50.0, 15.0, 'Très bonne', 'Poivre, mûre', 14.2, 'Cepage puissant du Rhône'), (7, 'Grenache', 'Rouge', 'Notes de fraise, épices', 'Sud', 6.0, 3.0, 12, 55.0, 17.0, 'Bonne', 'Fraise, épices', 13.5, 'Cepage important du Sud de la France'), (8, 'Riesling', 'Blanc', 'Notes d’abricot, miel', 'Alsace', 7.0, 3.6, 20, 50.0, 12.0, 'Excellente', 'Abricot, miel', 12.0, 'Cepage aromatique d’Alsace'), (9, 'Gewurztraminer', 'Blanc', 'Notes de lychee, épices', 'Alsace', 8.0, 3.7, 25, 45.0, 13.0, 'Excellente', 'Lychee, épices', 13.0, 'Cepage exotique d’Alsace'), (10, 'Tempranillo', 'Rouge', 'Notes de cerise, tabac', 'Espagne', 6.0, 3.2, 18, 60.0, 14.0, 'Bonne', 'Cerise, tabac', 14.5, 'Cepage principal en Espagne') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at edu.mimo.InVinoVeritas.InVinoVeritasApplication.main(InVinoVeritasApplication.java:10)
2024-08-31 19:13:50.023715+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Colonne "DESCRIPTIF" non trouvée
Column "DESCRIPTIF" not found; SQL statement:
INSERT INTO cepage (id, nom, couleur, caracteristiquesGustatives, regionOrigine, tauxSucre, acidite, potentielGarde, rendement, temperatureOptimale, resistanceMaladies, aromesTypiques, alcoolPotentiel, descriptif) VALUES (1, 'Cabernet Sauvignon', 'Rouge', 'Notes de cassis, cerise, poivre', 'Bordeaux', 5.0, 3.2, 15, 50.0, 15.0, 'Bonne', 'Cassis, cerise, poivre', 14.0, 'Cepage rouge classique de Bordeaux'), (2, 'Chardonnay', 'Blanc', 'Notes de pomme, agrumes, beurre', 'Bourgogne', 6.5, 3.3, 10, 60.0, 12.0, 'Bonne', 'Pomme, agrumes, beurre', 13.5, 'Cepage blanc polyvalent originaire de Bourgogne'), (3, 'Sauvignon Blanc', 'Blanc', 'Notes de pamplemousse, herbe', 'Loire', 5.5, 3.4, 8, 55.0, 14.0, 'Très bonne', 'Pamplemousse, herbe', 12.5, 'Cepage aromatique du Val de Loire'), (4, 'Merlot', 'Rouge', 'Notes de prune, cerise', 'Bordeaux', 6.0, 3.1, 12, 45.0, 16.0, 'Bonne', 'Prune, cerise', 13.8, 'Cepage souple et fruité de Bordeaux'), (5, 'Pinot Noir', 'Rouge', 'Notes de fraise, épices', 'Bourgogne', 5.5, 3.5, 10, 40.0, 13.0, 'Bonne', 'Fraise, épices', 14.0, 'Cepage délicat du Bourgogne'), (6, 'Syrah', 'Rouge', 'Notes de poivre, mûre', 'Rhône', 5.5, 3.3, 15, 50.0, 15.0, 'Très bonne', 'Poivre, mûre', 14.2, 'Cepage puissant du Rhône'), (7, 'Grenache', 'Rouge', 'Notes de fraise, épices', 'Sud', 6.0, 3.0, 12, 55.0, 17.0, 'Bonne', 'Fraise, épices', 13.5, 'Cepage important du Sud de la France'), (8, 'Riesling', 'Blanc', 'Notes d’abricot, miel', 'Alsace', 7.0, 3.6, 20, 50.0, 12.0, 'Excellente', 'Abricot, miel', 12.0, 'Cepage aromatique d’Alsace'), (9, 'Gewurztraminer', 'Blanc', 'Notes de lychee, épices', 'Alsace', 8.0, 3.7, 25, 45.0, 13.0, 'Excellente', 'Lychee, épices', 13.0, 'Cepage exotique d’Alsace'), (10, 'Tempranillo', 'Rouge', 'Notes de cerise, tabac', 'Espagne', 6.0, 3.2, 18, 60.0, 14.0, 'Bonne', 'Cerise, tabac', 14.5, 'Cepage principal en Espagne') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at edu.mimo.InVinoVeritas.InVinoVeritasApplication.main(InVinoVeritasApplication.java:10)
2024-08-31 19:17:01.222535+02:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Colonne "DESCRIPTIF" non trouvée
Column "DESCRIPTIF" not found; SQL statement:
INSERT INTO cepage (id, nom, couleur, caracteristiquesGustatives, regionOrigine, tauxSucre, acidite, potentielGarde, rendement, temperatureOptimale, resistanceMaladies, aromesTypiques, alcoolPotentiel, descriptif) VALUES (1, 'Cabernet Sauvignon', 'Rouge', 'Notes de cassis, cerise, poivre', 'Bordeaux', 5.0, 3.2, 15, 50.0, 15.0, 'Bonne', 'Cassis, cerise, poivre', 14.0, 'Cepage rouge classique de Bordeaux'), (2, 'Chardonnay', 'Blanc', 'Notes de pomme, agrumes, beurre', 'Bourgogne', 6.5, 3.3, 10, 60.0, 12.0, 'Bonne', 'Pomme, agrumes, beurre', 13.5, 'Cepage blanc polyvalent originaire de Bourgogne'), (3, 'Sauvignon Blanc', 'Blanc', 'Notes de pamplemousse, herbe', 'Loire', 5.5, 3.4, 8, 55.0, 14.0, 'Très bonne', 'Pamplemousse, herbe', 12.5, 'Cepage aromatique du Val de Loire'), (4, 'Merlot', 'Rouge', 'Notes de prune, cerise', 'Bordeaux', 6.0, 3.1, 12, 45.0, 16.0, 'Bonne', 'Prune, cerise', 13.8, 'Cepage souple et fruité de Bordeaux'), (5, 'Pinot Noir', 'Rouge', 'Notes de fraise, épices', 'Bourgogne', 5.5, 3.5, 10, 40.0, 13.0, 'Bonne', 'Fraise, épices', 14.0, 'Cepage délicat du Bourgogne'), (6, 'Syrah', 'Rouge', 'Notes de poivre, mûre', 'Rhône', 5.5, 3.3, 15, 50.0, 15.0, 'Très bonne', 'Poivre, mûre', 14.2, 'Cepage puissant du Rhône'), (7, 'Grenache', 'Rouge', 'Notes de fraise, épices', 'Sud', 6.0, 3.0, 12, 55.0, 17.0, 'Bonne', 'Fraise, épices', 13.5, 'Cepage important du Sud de la France'), (8, 'Riesling', 'Blanc', 'Notes d’abricot, miel', 'Alsace', 7.0, 3.6, 20, 50.0, 12.0, 'Excellente', 'Abricot, miel', 12.0, 'Cepage aromatique d’Alsace'), (9, 'Gewurztraminer', 'Blanc', 'Notes de lychee, épices', 'Alsace', 8.0, 3.7, 25, 45.0, 13.0, 'Excellente', 'Lychee, épices', 13.0, 'Cepage exotique d’Alsace'), (10, 'Tempranillo', 'Rouge', 'Notes de cerise, tabac', 'Espagne', 6.0, 3.2, 18, 60.0, 14.0, 'Bonne', 'Cerise, tabac', 14.5, 'Cepage principal en Espagne') [42122-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Table.getColumn(Table.java:759)
	at org.h2.command.Parser.parseColumn(Parser.java:1190)
	at org.h2.command.Parser.parseColumnList(Parser.java:1175)
	at org.h2.command.Parser.parseInsert(Parser.java:1549)
	at org.h2.command.Parser.parsePrepared(Parser.java:719)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at edu.mimo.InVinoVeritas.InVinoVeritasApplication.main(InVinoVeritasApplication.java:10)
